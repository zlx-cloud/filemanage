<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="net.sinodata.business.dao.RemoteUploadFileInfoDao">
	<resultMap id="FileInfoMap"
		type="net.sinodata.business.entity.RemoteUploadFileInfo">
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="UPLOAD_TIME" property="uploadTime" jdbcType="VARCHAR" />
		<result column="UPLOAD_DATE" property="uploadDate" jdbcType="VARCHAR" />
		<result column="FILE_NAME" property="fileName" jdbcType="VARCHAR" />
		<result column="TARGET_FILE_NAME" property="targetFileName" jdbcType="VARCHAR" />
		<result column="FILE_SIZE" property="fileSize" jdbcType="VARCHAR" />
		<result column="FILE_PATH" property="filePath" jdbcType="VARCHAR" />
		<result column="CONFIG_ID" property="configId" jdbcType="VARCHAR" />
		<result column="ROUTE" property="route" jdbcType="VARCHAR" />
		<result column="SERVICE_NAME" property="serviceName" jdbcType="VARCHAR" />
	</resultMap>

	<insert id="addFileInfo" parameterType="net.sinodata.business.entity.RemoteUploadFileInfo">
		insert into t_remote_upload_file_info(UPLOAD_TIME,FILE_NAME,
		TARGET_FILE_NAME,FILE_SIZE,FILE_PATH,CONFIG_ID,UPLOAD_DATE)
		values
		(#{uploadTime,jdbcType=VARCHAR},#{fileName,jdbcType=VARCHAR},
		#{targetFileName,jdbcType=VARCHAR},#{fileSize,jdbcType=VARCHAR},
		#{filePath,jdbcType=VARCHAR},#{configId,jdbcType=VARCHAR},
		#{uploadDate,jdbcType=VARCHAR})
	</insert>
	
	<select id="ftpList" resultMap="FileInfoMap" parameterType="map">
		select * from (
			select k.*, rownum rnum from (
				select u.USER_NAME,
          			to_char(
           	 			to_date(t.upload_time,'yyyy-mm-dd hh24:mi:ss'),
          			'yyyy-mm-dd hh24:mi:ss') as upload_time,
          			t.FILE_NAME,t.target_file_name,
          			case
           				when t.file_size &lt; 1024 then t.file_size || 'B'
            			when t.file_size &gt;= 1024 and t.file_size &lt; 1048576 then round(t.file_size/1024,2) || 'KB'
            			when t.file_size &gt;= 1048576 then round(t.file_size/1048576) || 'M'
          			end as FILE_SIZE,t.file_path,r.route,r.service_name
        		from t_remote_upload_file_info t
        		left join t_remote_upload_file_config r on t.config_id = r.id
        		left join S_USER u on r.UNIQUE_CODE = u.UNIQUE_CODE
        		where r.method = 'FTP'
				<if test="fileName!=null and fileName!=''"> 
					and t.FILE_NAME like '%'||#{fileName,jdbcType=VARCHAR}||'%'
				</if>
				<if test="uploadDate!=null and uploadDate!=''"> 
					and t.UPLOAD_DATE = #{uploadDate,jdbcType=VARCHAR}
				</if>
				order by t.upload_time desc
			) k where rownum &lt;= #{end}
		) where rnum &gt; #{start}
	</select>
	
	<select id="ftpCount" parameterType="map" resultType="int">
		select count(1) from t_remote_upload_file_info t
        left join t_remote_upload_file_config r on t.config_id = r.id
		where r.method = 'FTP'
		<if test="fileName!=null and fileName!=''"> 
			and t.FILE_NAME like '%'||#{fileName,jdbcType=VARCHAR}||'%'
		</if>
		<if test="uploadDate!=null and uploadDate!=''"> 
			and t.UPLOAD_DATE = #{uploadDate,jdbcType=VARCHAR}
		</if>
	</select>
	
	<select id="sftpList" resultMap="FileInfoMap" parameterType="map">
		select * from (
			select k.*, rownum rnum from (
				select u.USER_NAME,
          			to_char(
           	 			to_date(t.upload_time,'yyyy-mm-dd hh24:mi:ss'),
          			'yyyy-mm-dd hh24:mi:ss') as upload_time,
          			t.FILE_NAME,t.target_file_name,
          			case
           				when t.file_size &lt; 1024 then t.file_size || 'B'
            			when t.file_size &gt;= 1024 and t.file_size &lt; 1048576 then round(t.file_size/1024,2) || 'KB'
            			when t.file_size &gt;= 1048576 then round(t.file_size/1048576) || 'M'
          			end as FILE_SIZE,t.file_path,r.route,r.service_name
        		from t_remote_upload_file_info t
        		left join t_remote_upload_file_config r on t.config_id = r.id
        		left join S_USER u on r.UNIQUE_CODE = u.UNIQUE_CODE
        		where r.method = 'SFTP'
				<if test="fileName!=null and fileName!=''"> 
					and t.FILE_NAME like '%'||#{fileName,jdbcType=VARCHAR}||'%'
				</if>
				<if test="uploadDate!=null and uploadDate!=''"> 
					and t.UPLOAD_DATE = #{uploadDate,jdbcType=VARCHAR}
				</if>
				order by t.upload_time desc
			) k where rownum &lt;= #{end}
		) where rnum &gt; #{start}
	</select>
	
	<select id="sftpCount" parameterType="map" resultType="int">
		select count(1) from t_remote_upload_file_info t
        left join t_remote_upload_file_config r on t.config_id = r.id
		where r.method = 'SFTP'
		<if test="fileName!=null and fileName!=''"> 
			and t.FILE_NAME like '%'||#{fileName,jdbcType=VARCHAR}||'%'
		</if>
		<if test="uploadDate!=null and uploadDate!=''"> 
			and t.UPLOAD_DATE = #{uploadDate,jdbcType=VARCHAR}
		</if>
	</select>
	
	<select id="hdfsList" resultMap="FileInfoMap" parameterType="map">
		select * from (
			select k.*, rownum rnum from (
				select u.USER_NAME,
          			to_char(
           	 			to_date(t.upload_time,'yyyy-mm-dd hh24:mi:ss'),
          			'yyyy-mm-dd hh24:mi:ss') as upload_time,
          			t.FILE_NAME,t.target_file_name,
          			case
           				when t.file_size &lt; 1024 then t.file_size || 'B'
            			when t.file_size &gt;= 1024 and t.file_size &lt; 1048576 then round(t.file_size/1024,2) || 'KB'
            			when t.file_size &gt;= 1048576 then round(t.file_size/1048576) || 'M'
          			end as FILE_SIZE,t.file_path,r.route,r.service_name
        		from t_remote_upload_file_info t
        		left join t_remote_upload_file_config r on t.config_id = r.id
        		left join S_USER u on r.UNIQUE_CODE = u.UNIQUE_CODE
        		where r.method = 'HDFS'
				<if test="fileName!=null and fileName!=''"> 
					and t.FILE_NAME like '%'||#{fileName,jdbcType=VARCHAR}||'%'
				</if>
				<if test="uploadDate!=null and uploadDate!=''"> 
					and t.UPLOAD_DATE = #{uploadDate,jdbcType=VARCHAR}
				</if>
				order by t.upload_time desc
			) k where rownum &lt;= #{end}
		) where rnum &gt; #{start}
	</select>
	
	<select id="hdfsCount" parameterType="map" resultType="int">
		select count(1) from t_remote_upload_file_info t
        left join t_remote_upload_file_config r on t.config_id = r.id
		where r.method = 'HDFS'
		<if test="fileName!=null and fileName!=''"> 
			and t.FILE_NAME like '%'||#{fileName,jdbcType=VARCHAR}||'%'
		</if>
		<if test="uploadDate!=null and uploadDate!=''"> 
			and t.UPLOAD_DATE = #{uploadDate,jdbcType=VARCHAR}
		</if>
	</select>
	
	<select id="httpList" resultMap="FileInfoMap" parameterType="map">
		select * from (
			select k.*, rownum rnum from (
				select u.USER_NAME,
          			to_char(
           	 			to_date(t.upload_time,'yyyy-mm-dd hh24:mi:ss'),
          			'yyyy-mm-dd hh24:mi:ss') as upload_time,
          			t.FILE_NAME,t.target_file_name,
          			case
           				when t.file_size &lt; 1024 then t.file_size || 'B'
            			when t.file_size &gt;= 1024 and t.file_size &lt; 1048576 then round(t.file_size/1024,2) || 'KB'
            			when t.file_size &gt;= 1048576 then round(t.file_size/1048576) || 'M'
          			end as FILE_SIZE,t.file_path,r.route,r.service_name
        		from t_remote_upload_file_info t
        		left join t_remote_upload_file_config r on t.config_id = r.id
        		left join S_USER u on r.UNIQUE_CODE = u.UNIQUE_CODE
        		where r.method = 'HTTP'
				<if test="fileName!=null and fileName!=''"> 
					and t.FILE_NAME like '%'||#{fileName,jdbcType=VARCHAR}||'%'
				</if>
				<if test="uploadDate!=null and uploadDate!=''"> 
					and t.UPLOAD_DATE = #{uploadDate,jdbcType=VARCHAR}
				</if>
				order by t.upload_time desc
			) k where rownum &lt;= #{end}
		) where rnum &gt; #{start}
	</select>
	
	<select id="httpCount" parameterType="map" resultType="int">
		select count(1) from t_remote_upload_file_info t
        left join t_remote_upload_file_config r on t.config_id = r.id
		where r.method = 'HTTP'
		<if test="fileName!=null and fileName!=''"> 
			and t.FILE_NAME like '%'||#{fileName,jdbcType=VARCHAR}||'%'
		</if>
		<if test="uploadDate!=null and uploadDate!=''"> 
			and t.UPLOAD_DATE = #{uploadDate,jdbcType=VARCHAR}
		</if>
	</select>

</mapper>